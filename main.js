let web3, account, contract, usdt;

async function connectWallet() {
  if (window.ethereum) {
    web3 = new Web3(window.ethereum);
    await window.ethereum.request({ method: "eth_requestAccounts" });
    const accounts = await web3.eth.getAccounts();
    account = accounts[0];

    const chainId = await web3.eth.getChainId();
    if (chainId !== 56) {
      alert("‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô Network ‡πÄ‡∏õ‡πá‡∏ô BNB Smart Chain (Chain ID 56)");
      return;
    }

    contract = new web3.eth.Contract(contractABI, contractAddress);
    usdt = new web3.eth.Contract(usdtABI, usdtAddress);

    document.getElementById("walletAddress").innerText = "‚úÖ " + account;
    document.getElementById("refSection").style.display = "block";
    document.getElementById("refLink").value = window.location.origin + window.location.pathname + "?ref=" + account;

    loadUserInfo();
  } else {
    alert("‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á MetaMask ‡∏´‡∏£‡∏∑‡∏≠ Bitget Wallet");
  }
}

async function checkNetwork() {
  const currentChainId = await web3.eth.getChainId();
  if (currentChainId !== 56) {
    alert("‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô Network ‡πÄ‡∏õ‡πá‡∏ô BNB Smart Chain (Chain ID 56)");
    return false;
  }
  return true;
}

async function copyRefLink() {
  const refInput = document.getElementById("refLink");
  refInput.select();
  document.execCommand("copy");
  alert("üìã ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÅ‡∏•‡πâ‡∏ß!");
}

async function registerReferrer() {
  const ref = document.getElementById("refInput").value;
  if (!ref || ref.toLowerCase() === account.toLowerCase()) {
    document.getElementById("status").innerText = "‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏ï‡∏ô‡πÄ‡∏≠‡∏á‡πÑ‡∏î‡πâ";
    return;
  }
  if (!(await checkNetwork())) return;

  try {
    await contract.methods.setReferrer(ref).send({ from: account });
    document.getElementById("status").innerText = "‚úÖ ‡∏™‡∏°‡∏±‡∏Ñ‡∏£ Referrer ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à";
  } catch (e) {
    document.getElementById("status").innerText = "‚ùå ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: " + e.message;
  }
}

async function buyAndStake() {
  const amount = document.getElementById("usdtAmount").value;
  const minKJC = document.getElementById("amountOutMin").value;
  if (!amount || !minKJC) {
    alert("‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö");
    return;
  }
  if (!(await checkNetwork())) return;

  const usdtAmount = web3.utils.toWei(amount, "mwei");
  const amountOutMin = web3.utils.toWei(minKJC, "ether");

  try {
    await usdt.methods.approve(contractAddress, usdtAmount).send({ from: account });
    await contract.methods.buyAndStake(usdtAmount, amountOutMin).send({ from: account });
    document.getElementById("status").innerText = "‚úÖ ‡∏ã‡∏∑‡πâ‡∏≠‡πÅ‡∏•‡∏∞ Stake ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à";
    loadUserInfo();
  } catch (e) {
    document.getElementById("status").innerText = "‚ùå ‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: " + e.message;
  }
}

async function claimReferral() {
  if (!(await checkNetwork())) return;

  try {
    await contract.methods.claimReferralReward().send({ from: account });
    document.getElementById("status").innerText = "‚úÖ ‡πÄ‡∏Ñ‡∏•‡∏°‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à";
    loadUserInfo();
  } catch (e) {
    document.getElementById("status").innerText = "‚ùå ‡πÄ‡∏Ñ‡∏•‡∏°‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß";
  }
}

async function claimStaking() {
  if (!(await checkNetwork())) return;

  try {
    await contract.methods.claimStakingReward().send({ from: account });
    document.getElementById("status").innerText = "‚úÖ ‡πÄ‡∏Ñ‡∏•‡∏°‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏• Stake ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à";
    loadUserInfo();
  } catch (e) {
    document.getElementById("status").innerText = "‚ùå ‡πÄ‡∏Ñ‡∏•‡∏°‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏• Stake ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß";
  }
}

async function loadUserInfo() {
  try {
    const stake = await contract.methods.stakedAmount(account).call();
    const reward = await contract.methods.referralReward(account).call();
    document.getElementById("yourStake").innerText = "‡∏¢‡∏≠‡∏î Stake: " + web3.utils.fromWei(stake, "ether") + " KJC";
    document.getElementById("yourReward").innerText = "‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥: " + web3.utils.fromWei(reward, "ether") + " KJC";
  } catch (e) {
    console.error("‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ:", e);
  }
}
